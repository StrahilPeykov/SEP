# Generated by Django 5.2 on 2025-07-02 09:33

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0024_alter_emission_options_alter_emission_managers_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='emission',
            name='pcf_calculation_method',
            field=models.CharField(choices=[('EN 15804', 'EN 15804 - Sustainability rules for construction products'), ('GHG Protocol', 'GHG Protocol - Corporate Standard'), ('IEC TS 63058', 'IEC TS 63058 -Guidelines for eco-design of low-voltage gear'), ('IEC 63366', 'IEC 63366 - Guidance for commissioning VSC HVDC systems'), ('ISO 14040/14044', 'ISO 14040/14044 - Life cycle assessment principles & methods'), ('ISO 14067', 'ISO 14067 - Carbon footprint of products'), ('PEP Ecopassport', 'PEP Ecopassport - Chemical product eco-toxicity report'), ('PACT v2.0.0', 'PACT v2.0.0 - V2 for Scope 3 carbon footprint data'), ('PACT v1.0.1', 'PACT v1.0.1 - Early version of Scope 3 carbon data standard'), ('PACT v3.0.0', 'PACT v3.0.0 - Updated Scope 3 carbon footprint standard'), ('TFS v2', "TFS v2 - Chemical industry's product carbon footprint guide"), ('TFS v3', "TFS v3 - Chemical industry's product carbon footprint guide"), ('Catena-X v2', 'Catena-X v2 - Digital twin & data exchange for auto supply'), ('Catena-X v1', 'Catena-X v1 - Digital twin & data exchange for auto supply'), ('Catena-X v3', 'Catena-X v3 - Digital twin & data exchange for auto supply'), ('BS PAS 2050', 'BS PAS 2050 - Specification for the assessment of the life cycle greenhouse gas emissions of goods and services'), ('IEC 63372', 'IEC 63372 - Guidelines for energy storage system testing'), ('Other', 'Other')], default='ISO 14040/14044', max_length=255),
        ),
        migrations.AlterField(
            model_name='product',
            name='pcf_calculation_method',
            field=models.CharField(choices=[('EN 15804', 'EN 15804 - Sustainability rules for construction products'), ('GHG Protocol', 'GHG Protocol - Corporate Standard'), ('IEC TS 63058', 'IEC TS 63058 -Guidelines for eco-design of low-voltage gear'), ('IEC 63366', 'IEC 63366 - Guidance for commissioning VSC HVDC systems'), ('ISO 14040/14044', 'ISO 14040/14044 - Life cycle assessment principles & methods'), ('ISO 14067', 'ISO 14067 - Carbon footprint of products'), ('PEP Ecopassport', 'PEP Ecopassport - Chemical product eco-toxicity report'), ('PACT v2.0.0', 'PACT v2.0.0 - V2 for Scope 3 carbon footprint data'), ('PACT v1.0.1', 'PACT v1.0.1 - Early version of Scope 3 carbon data standard'), ('PACT v3.0.0', 'PACT v3.0.0 - Updated Scope 3 carbon footprint standard'), ('TFS v2', "TFS v2 - Chemical industry's product carbon footprint guide"), ('TFS v3', "TFS v3 - Chemical industry's product carbon footprint guide"), ('Catena-X v2', 'Catena-X v2 - Digital twin & data exchange for auto supply'), ('Catena-X v1', 'Catena-X v1 - Digital twin & data exchange for auto supply'), ('Catena-X v3', 'Catena-X v3 - Digital twin & data exchange for auto supply'), ('BS PAS 2050', 'BS PAS 2050 - Specification for the assessment of the life cycle greenhouse gas emissions of goods and services'), ('IEC 63372', 'IEC 63372 - Guidelines for energy storage system testing'), ('Other', 'Other')], default='ISO 14040/14044', max_length=255),
        ),
        migrations.AlterField(
            model_name='product',
            name='reference_impact_unit',
            field=models.CharField(choices=[('g', 'Gram'), ('kg', 'Kilogram'), ('t', 'Tonne'), ('ml', 'Milliliter'), ('l', 'Liter'), ('m3', 'Cubic meter'), ('m2', 'Square meter'), ('pc', 'Piece'), ('kWh', 'Kilowatt hour'), ('Other', 'Other')], default='pc', max_length=255),
        ),
        migrations.AlterField(
            model_name='transportemission',
            name='weight',
            field=models.FloatField(help_text='Weight of the transported product in tonnes', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
    ]
